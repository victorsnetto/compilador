import java.util.*;
import javax.swing.JOptionPane;

public class posfixa {
    public static void main(String args[]) {
	        String infixa = JOptionPane.showInputDialog("Digite o infixa a ser depurado: ");
        infixa = infixa.replaceAll("\\s", "");
        if (infixa.matches(".*//.*")) {
            int infixaIndex = infixa.indexOf("//");
            infixa = infixa.substring(0, infixaIndex);
        }
        if (infixa.matches(".*/*.*")) {
           int startIndex = infixa.indexOf("/*");
           int endIndex = infixa.indexOf("*/");
           String replacement = ("");
           String toBeReplaced = infixa.substring(startIndex, endIndex + 2);
           infixa = infixa.replace(toBeReplaced, replacement);
        }
        System.out.println("Infixa : " + infixa);
        System.out.println("Posfixa : " + inf2posf(infixa));
    }

    private static String inf2posf(String infixa) {
        String posfixa = "";
        Stack<Character> operator = new Stack<Character>();
        char pop;	
        for (int i = 0; i < infixa.length(); i++) {
            char get = infixa.charAt(i);
            if (!isOperator(get))
                posfixa += get;
            else if (get == ')')
                while ((pop = operator.pop()) != '(')
                    posfixa += pop;
            else {
                while (!operator.isEmpty() && get != '(' && precedente(operator.peek()) >= precedente(get))
                    posfixa += operator.pop();
                operator.push(get);
            }
        }
        while (!operator.isEmpty())
            posfixa += operator.pop();

        return posfixa;
    }
    private static boolean isOperator(char i) {
        return precedente(i) > 0;
    }
    private static int precedente(char i) {
        if (i == '(' || i == ')') return 1;
        else if (i == '-' || i == '+') return 2;
        else if (i == '*' || i == '/') return 3;
        else return 0;
    }
}