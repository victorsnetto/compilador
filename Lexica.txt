package compiladores;

import java.util.Scanner;
import javax.swing.JOptionPane;
public class compilador {
    public static void main(String[] args) {
        String str = JOptionPane.showInputDialog("Insira o código a ser compilado: ");
        str = str.replaceAll("\\s", "");
        String strIf = "^[i][f][(][-]?[\\w]+[!\\W]{1,3}[-]?[\\w]+[)]$";
        String strWhile = "^[w][h][i][l][e][(][-]?[\\w]+[!\\W]{1,3}[-]?[\\w]+[)]$";
        String strFor = "^[f][o][r][(][\\w]+[=][-]?[\\w]+[;][\\w]+[!\\W]{1,3}[\\w]+"
                + "[;][\\w]+([+][+]||[-][-])[)]$";
        String strInteiro = "^[\\d]+$";
        String caracteres = "QWERTYUIOPASDFGHJKLÇZXCVBNMqwertyuiopasdfghjklçzxcvbnm";
        String numeros = "0123456789";
        String charEsp = "!=<>";
        String[] igualdades = {"===", "==", "!=", "<", ">", "<=", ">="};
        String nSei = "+-";
        
        String strTemp = "";
        String strTemp2 = "";
        boolean hasError = false;
        String result = "";
        if(str.matches(strIf)){
            int controle = 0;
            result = result + "|--------|-------------------------|\n" + 
                    "| Lexema |          Token          |\n" + 
                    "|--------|-------------------------|\n";
            result = result + "|  if    |   Palavra Reservada     |\n" + 
                    "|--------|-------------------------|\n";
            result = result + "|   (    |      Delimitador        |\n" + 
                    "|--------|-------------------------|\n";
            
            strTemp = str.substring(str.indexOf("(") + 1, str.length());
            for(int i = 0; i < strTemp.length(); i++){
                if(charEsp.indexOf(strTemp.charAt(i)) >= 0){
                    strTemp2 = strTemp.substring(strTemp.indexOf(strTemp.charAt(i)), strTemp.length());
                    strTemp = strTemp.substring(0, strTemp.indexOf(strTemp.charAt(i)));
                    break;
                }
            }
            if(strTemp.matches(strInteiro)){
                result = result + constroiTabela(strTemp, "Inteiro");
            }else
                result = result + constroiTabela(strTemp, "Identificador");
            
            for(int i = 0; i < strTemp2.length(); i++){
                if(charEsp.indexOf(strTemp2.charAt(i)) < 0){
                    strTemp = strTemp2.substring(0, strTemp2.indexOf(strTemp2.charAt(i)));
                    strTemp2 = strTemp2.substring(strTemp2.indexOf(strTemp2.charAt(i)), 
                            strTemp2.length() - 1);
                    break;
                }
            }
            controle = 0;
            for(int i = 0; i < igualdades.length; i++){
                if(igualdades[i].equals(strTemp)){
                    result = result + constroiTabela(strTemp, "Comparação");
                    controle++;
                }
                if(i == igualdades.length - 1 && controle == 0){
                    result = "String inválida!";
                    hasError = true;
                }
            }
            if(!hasError){
                if(strTemp2.matches(strInteiro)){
                    result = result + constroiTabela(strTemp2, "Inteiro");
                }else
                    result = result + constroiTabela(strTemp2, "Identificador");

                    result = result + "|   )    |      Delimitador        |\n" + 
                            "|--------|-------------------------|\n";
            }
            System.out.println(result);
        }else if(str.matches(strWhile)){
            int controle = 0;

            result = result + "|--------|-------------------------|\n" + 
                    "| Lexema |          Token          |\n" + 
                    "|--------|-------------------------|\n";
            result = result + "| while  |   Palavra Reservada     |\n" + 
                    "|--------|-------------------------|\n";
            result = result + "|   (    |      Delimitador        |\n" + 
                    "|--------|-------------------------|\n";

            strTemp = str.substring(str.indexOf("(") + 1, str.length());
            for(int i = 0; i < strTemp.length(); i++){
                if(charEsp.indexOf(strTemp.charAt(i)) >= 0){
                    strTemp2 = strTemp.substring(strTemp.indexOf(strTemp.charAt(i)), strTemp.length());
                    strTemp = strTemp.substring(0, strTemp.indexOf(strTemp.charAt(i)));
                    break;
                }
            }
            if(strTemp.matches(strInteiro)){
                result = result + constroiTabela(strTemp, "Inteiro");
            }else
                result = result + constroiTabela(strTemp, "Identificador");
            
            for(int i = 0; i < strTemp2.length(); i++){
                if(charEsp.indexOf(strTemp2.charAt(i)) < 0){
                    strTemp = strTemp2.substring(0, strTemp2.indexOf(strTemp2.charAt(i)));
                    strTemp2 = strTemp2.substring(strTemp2.indexOf(strTemp2.charAt(i)), 
                            strTemp2.length() - 1);
                    break;
                }
            }
            controle = 0;
            for(int i = 0; i < igualdades.length; i++){
                if(igualdades[i].equals(strTemp)){
                    result = result + constroiTabela(strTemp, "Comparação");
                    controle++;
                }
                if(i == igualdades.length - 1 && controle == 0){
                    result = "String inválida!";
                    hasError = true;
                }
            }
            if(!hasError){
                if(strTemp2.matches(strInteiro)){
                    result = result + constroiTabela(strTemp2, "Inteiro");
                }else
                    result = result + constroiTabela(strTemp2, "Identificador");
            
                result = result + "|   )    |      Delimitador        |\n" + 
                        "|--------|-------------------------|\n";
            }
            System.out.println(result);
        }else if(str.matches(strFor)){
            int controle = 0;

            result = result + "|--------|-------------------------|\n" + 
                    "| Lexema |          Token          |\n" + 
                    "|--------|-------------------------|\n";
            result = result + "|  for   |   Palavra Reservada     |\n" + 
                    "|--------|-------------------------|\n";
            result = result + "|   (    |      Delimitador        |\n" + 
                    "|--------|-------------------------|\n";

            strTemp = str.substring(str.indexOf("(") + 1, str.length());
            for(int i = 0; i < strTemp.length(); i++){
                if(charEsp.indexOf(strTemp.charAt(i)) >= 0){
                    strTemp2 = strTemp.substring(strTemp.indexOf(strTemp.charAt(i)) + 1, 
                            strTemp.length());
                    strTemp = strTemp.substring(0, strTemp.indexOf(strTemp.charAt(i)));
                    break;
                }
            }
            if(strTemp.matches(strInteiro)){
                result = result + constroiTabela(strTemp, "Inteiro");
            }else
                result = result + constroiTabela(strTemp, "Identificador");
            
            result = result + "|   =    | Operador de atribuição  |\n" + 
                    "|--------|-------------------------|\n";
            
            strTemp = "";
            for(int i = 0; i < strTemp2.length(); i++){
                if(strTemp2.charAt(i) != ';'){
                    strTemp = strTemp + strTemp2.charAt(i);
                }
                strTemp2 = strTemp2.substring(i + 2, strTemp2.length());
                break;
            }
            if(strTemp.matches(strInteiro)){
                result = result + constroiTabela(strTemp, "Inteiro");
            }else
                result = result + constroiTabela(strTemp, "Identificador");
            
            result = result + "|   ;    |        Separador        |\n" + 
                    "|--------|-------------------------|\n";
            
            for(int i = 0; i < strTemp2.length(); i++){
                if(charEsp.indexOf(strTemp2.charAt(i)) >= 0){
                    strTemp = strTemp2.substring(0, strTemp2.indexOf(strTemp2.charAt(i)));
                    strTemp2 = strTemp2.substring(strTemp2.indexOf(strTemp2.charAt(i)), 
                            strTemp2.length());
                    break;
                }
            }
            if(strTemp.matches(strInteiro)){
                result = result + constroiTabela(strTemp, "Inteiro");
            }else
                result = result + constroiTabela(strTemp, "Identificador");
            
            for(int i = 0; i < strTemp2.length(); i++){
                if(charEsp.indexOf(strTemp2.charAt(i)) < 0){
                    strTemp = strTemp2.substring(0, strTemp2.indexOf(strTemp2.charAt(i)));
                    strTemp2 = strTemp2.substring(strTemp2.indexOf(strTemp2.charAt(i)), 
                            strTemp2.length() - 1);
                    break;
                }
            }
            controle = 0;
            for(int i = 0; i < igualdades.length; i++){
                if(igualdades[i].equals(strTemp)){
                    result = result + constroiTabela(strTemp, "Comparação");
                    controle++;
                }
                if(i == igualdades.length - 1 && controle == 0){
                    result = "String inválida!";
                    hasError = true;
                }
            }
            if(!hasError){
                strTemp = "";
                for(int i = 0; i < strTemp2.length(); i++){
                    if(strTemp2.charAt(i) == ';'){
                        strTemp2 = strTemp2.substring(i + 1, strTemp2.length());
                        break;
                    }else
                        strTemp = strTemp + strTemp2.charAt(i);
                }
                if(strTemp.matches(strInteiro)){
                    result = result + constroiTabela(strTemp, "Inteiro");
                }else
                    result = result + constroiTabela(strTemp, "Identificador");
                
                result = result + "|   ;    |        Separador        |\n" + 
                        "|--------|-------------------------|\n";
                
                for(int i = 0; i < strTemp2.length(); i++){
                    if(nSei.indexOf(strTemp2.charAt(i)) >= 0){
                        strTemp = strTemp2.substring(0, strTemp2.indexOf(strTemp2.charAt(i)));
                        strTemp2 = strTemp2.substring(strTemp2.indexOf(strTemp2.charAt(i)), 
                                strTemp2.length());
                    }
                }
                if(strTemp.matches(strInteiro)){
                    result = result + constroiTabela(strTemp, "Inteiro");
                }else
                    result = result + constroiTabela(strTemp, "Identificador");
            
                if(strTemp2.charAt(0) == '+'){
                    result = result + "|   ++   |       Incremento        |\n" + 
                            "|--------|-------------------------|\n";
                }else if(strTemp2.charAt(0) == '-'){
                    result = result + "|   --   |       Decremento        |\n" + 
                            "|--------|-------------------------|\n";
                }
            
                result = result + "|   )    |      Delimitador        |\n" + 
                        "|--------|-------------------------|\n";
            }
            System.out.println(result);
        }else{
            System.out.println("String inválida");
        }
    }
    public static String constroiTabela(String str, String temp){
        String result = "";
        if(temp == "Identificador"){
            if(str.length() == 1){
                result = "|   " + str + "    |      Identificador      |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 2){
                result = "|   " + str + "   |      Identificador      |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 3){
                result = "|  " + str + "   |      Identificador      |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 4){
                result = "|  " + str + "  |      Identificador      |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 5){
                result = "| " + str + "  |      Identificador      |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 6){
                result = "| " + str + " |      Identificador      |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 7){
                result = "|" + str + " |      Identificador      |\n" + 
                        "|--------|-------------------------|\n";
            }else{
                result = "|" + str + "|      Identificador      |\n" + 
                        "|--------|-------------------------|\n";
            }
        }else if(temp == "Inteiro"){
            if(str.length() == 1){
                result = "|   " + str + "    |         Inteiro         |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 2){
                result = "|   " + str + "   |         Inteiro         |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 3){
                result = "|  " + str + "   |         Inteiro         |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 4){
                result = "|  " + str + "  |         Inteiro         |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 5){
                result = "| " + str + "  |         Inteiro         |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 6){
                result = "| " + str + " |         Inteiro         |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 7){
                result = "|" + str + " |         Inteiro         |\n" + 
                        "|--------|-------------------------|\n";
            }else{
                result = "|" + str + "|         Inteiro         |\n" + 
                        "|--------|-------------------------|\n";
            }
        }else if(temp == "Comparação"){
            if(str.length() == 1){
                result = result + "|   " + str + "    | Operador de comparação  |\n" + 
                        "|--------|-------------------------|\n";
            }else if(str.length() == 2){
                result = result + "|   " + str + "   | Operador de comparação  |\n" + 
                        "|--------|-------------------------|\n";
            }else{
                result = result + "|  " + str + "   | Operador de comparação  |\n" + 
                        "|--------|-------------------------|\n";
            }
        }
        return result;
    }
}